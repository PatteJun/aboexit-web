---
import { languages } from '../i18n/ui';

const { lang } = Astro.props;
const currentPath = Astro.url.pathname;

const languageNames = {
  de: { name: 'Deutsch', flag: 'ðŸ‡¨ðŸ‡­' },
  fr: { name: 'FranÃ§ais', flag: 'ðŸ‡«ðŸ‡·' },
  it: { name: 'Italiano', flag: 'ðŸ‡®ðŸ‡¹' },
  en: { name: 'English', flag: 'ðŸ‡ºðŸ‡¸' }
};
---

<div class="language-switcher" data-current-path={currentPath} data-language-names={JSON.stringify(languageNames)}>
  <button class="switcher-button" aria-haspopup="true" aria-expanded="false">
    <span class="flag">{languageNames[lang].flag}</span>
    <span class="current-lang">{languageNames[lang].name}</span>
    <svg class="chevron" xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <polyline points="6 9 12 15 18 9"></polyline>
    </svg>
  </button>
  
  <div class="dropdown">
    {Object.entries(languageNames).map(([code, { name, flag }]) => {
      const path = currentPath.replace(/^\/[a-z]{2}(\/|$)/, `/${code}$1`);
      return (
        <a 
          href={path}
          class={`lang-option ${code === lang ? 'active' : ''}`}
          hreflang={code}
        >
          <span class="flag">{flag}</span>
          <span class="lang-name">{name}</span>
          {code === lang && (
            <svg class="check" xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <polyline points="20 6 9 17 4 12"></polyline>
            </svg>
          )}
        </a>
      );
    })}
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const switcher = document.querySelector('.language-switcher');
    const button = switcher.querySelector('.switcher-button');
    const currentPath = switcher.getAttribute('data-current-path');
    const languageNames = JSON.parse(switcher.getAttribute('data-language-names'));
    
    const toggleDropdown = () => {
      const expanded = button.getAttribute('aria-expanded') === 'true';
      button.setAttribute('aria-expanded', (!expanded).toString());
      switcher.classList.toggle('active');
    };

    button.addEventListener('click', (e) => {
      e.stopPropagation();
      toggleDropdown();
    });

    document.addEventListener('click', (e) => {
      if (!switcher.contains(e.target as Node)) {
        button.setAttribute('aria-expanded', 'false');
        switcher.classList.remove('active');
      }
    });
  });
</script>

<style>
  .language-switcher {
    position: relative;
  }

  .switcher-button {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    background: var(--white);
    border: 1px solid var(--border-color);
    padding: 0.5rem 1rem;
    border-radius: 0.5rem;
    font-size: 0.875rem;
    color: var(--text-color);
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .switcher-button:hover {
    background: var(--background-color);
    border-color: var(--primary-color);
  }

  .flag {
    font-size: 1.25rem;
  }

  .chevron {
    transition: transform 0.2s ease;
  }

  .language-switcher.active .chevron {
    transform: rotate(180deg);
  }

  .dropdown {
    position: absolute;
    top: calc(100% + 0.5rem);
    right: 0;
    background: var(--white);
    border: 1px solid var(--border-color);
    border-radius: 0.5rem;
    padding: 0.5rem;
    min-width: 160px;
    box-shadow: var(--shadow);
    opacity: 0;
    visibility: hidden;
    transform: translateY(-10px);
    transition: all 0.2s ease;
  }

  .language-switcher.active .dropdown {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  .lang-option {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.5rem 0.75rem;
    color: var(--text-color);
    text-decoration: none;
    border-radius: 0.25rem;
    transition: all 0.2s ease;
  }

  .lang-option:hover {
    background: var(--background-color);
  }

  .lang-option.active {
    color: var(--primary-color);
    background: var(--background-color);
  }

  .check {
    margin-left: auto;
    color: var(--primary-color);
  }

  @media (max-width: 768px) {
    .language-switcher {
      margin-top: 1rem;
    }
  }
</style>